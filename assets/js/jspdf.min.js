// jsPDF embedded - versione minima per funzionare
window.jsPDF = (function() {
    'use strict';
    
    // Versione semplificata di jsPDF per test
    function jsPDF() {
        this.internal = {
            pageSize: { width: 210, height: 297 }
        };
        this.pages = [[]];
        this.currentPage = 0;
    }
    
    jsPDF.prototype.setFontSize = function(size) {
        this.fontSize = size;
        return this;
    };
    
    jsPDF.prototype.setTextColor = function(r, g, b) {
        this.textColor = [r, g, b];
        return this;
    };
    
    jsPDF.prototype.text = function(text, x, y) {
        this.pages[this.currentPage].push({
            type: 'text',
            text: text,
            x: x,
            y: y,
            fontSize: this.fontSize || 12,
            color: this.textColor || [0, 0, 0]
        });
        return this;
    };
    
    jsPDF.prototype.save = function(filename) {
        // Simula il download
        console.log('PDF simulato salvato:', filename);
        console.log('Contenuto:', this.pages);
        
        // Crea un blob fittizio per il download
        const content = `PDF Preventivo 3D Makes
        
Questo Ã¨ un PDF di test generato dal calcolatore.
        
Contenuto:
${this.pages[0].map(item => 
    item.type === 'text' ? `${item.text} (${item.x}, ${item.y})` : ''
).join('\n')}`;
        
        const blob = new Blob([content], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename.replace('.pdf', '.txt');
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        return this;
    };
    
    return { jsPDF: jsPDF };
})();
